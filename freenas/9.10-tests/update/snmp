#!/usr/bin/env bash
# License: BSD
# Location for tests into REST API of FreeNAS 9.10
# Resty Docs: https://github.com/micha/resty
# jsawk: https://github.com/micha/jsawk

# List the other modules which must be run before this module can execute
REQUIRES=""
export REQUIRES

snmp_tests()
{
  local COMMUNITY="private"
  local TRAPS=true
  local CONTACT="user@localhost"
  local LOCATION="NY"
  local PASSWORD="testing5678"
  # SNMP agent command timeout in seconds
  local SNMP_TIMEOUT=30

  # Determine which IP Address to use when talking with SNMP; using $BRIDGEIP if it's set
  local ip_address=${FNASTESTIP}
  if [ -n "${BRIDGEIP}" ]; then
    ip_address=${BRIDGEIP}
  fi

  set_test_group_text "2 - Update - SNMP tests" "9"
  CLASSNAME=ixbuild.resty.functional.update.snmp

  echo_test_title "Disable SNMP service"
  rest_request "PUT" "/services/services/snmp/" '{ "srv_enable": false }'
  check_rest_response "200"

  echo_test_title "Update configuration of SNMP service"
  rest_request "PUT" "/services/snmp/" '{ "snmp_community": "'"${COMMUNITY}"'", "snmp_traps": '${TRAPS}', "snmp_contact": "'"${CONTACT}"'", "snmp_location": "'"${LOCATION}"'", "snmp_v3_password": "'"${PASSWORD}"'", "snmp_v3_password2": "'"${PASSWORD}"'" }'
  check_rest_response "200"

  echo_test_title "Enable SNMP service"
  rest_request "PUT" "/services/services/snmp/" '{ "srv_enable": true }'
  check_rest_response "200"

  echo_test_title "Verify that SNMP port 199 is open"
  wait_for_avail_port "199"
  check_exit_status || return 1

  echo_test_title "Validate that SNMP service is running"
  rest_request "GET" "/services/services/snmp/"
  check_service_status "RUNNING" || return 1

  echo_test_title "Validate that SNMP settings were updated by the API"
  rest_request "GET" "/services/snmp/"
  check_property_value -q ".snmp_community" "${COMMUNITY}" \
    && check_property_value -q ".snmp_traps" "${TRAPS}" \
    && check_property_value -q ".snmp_contact" "${CONTACT}" \
    && check_property_value -q ".snmp_location" "${LOCATION}" \
    && check_property_value -q ".snmp_v3_password" "${PASSWORD}" \
    && echo_ok || echo_fail

  echo_test_title "Verify that we can get a response from the SNMP server"
  rc_test "snmpwalk -t ${SNMP_TIMEOUT} -c ${COMMUNITY} -v 2c ${ip_address} SNMPv2-MIB::sysDescr.0 | grep -q 'FreeBSD'" || return 1

  echo_test_title "Verify that the sysContact was set correctly on the SNMP server"
  rc_test "snmpget -c ${COMMUNITY} -v 2c -m ALL ${ip_address} SNMPv2-MIB::sysContact.0 | awk '\$4 == \"${CONTACT}\" {print \$4}' | grep -q '${CONTACT}' "

  echo_test_title "Verify that the sysLocation was set correctly on the SNMP server"
  rc_test "snmpget -c ${COMMUNITY} -v 2c -m ALL ${ip_address} SNMPv2-MIB::sysLocation.0 | awk '\$4 == \"${LOCATION}\" {print \$4}' | grep -q '${LOCATION}' "

  #
  # TODO - test password authentication?
  #

  return 0
}

# Init function, this is called after module is sourced
# Pre-Set variables
# TESTSET = ( SMOKE / COMPLETE / BENCHMARK )
snmp_init()
{
  # Run all the storage tests
  case $TESTSET in
        SMOKE) snmp_tests ;;
     COMPLETE) snmp_tests ;;
    BENCHMARK) ;;
            *) snmp_tests ;;
  esac
}
