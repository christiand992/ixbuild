#!/usr/local/bin/bash
# Author: Kris Moore
# License: BSD
# Location for tests into REST API of FreeNAS 9.10
# Resty Docs: https://github.com/micha/resty
# jsawk: https://github.com/micha/jsawk

# List the other modules which must be run before this module can execute
REQUIRES="update_storage"
export REQUIRES

iscsi_tests()
{
  # Set the group text and number of tests
  set_test_group_text "2 - Update - iSCSI tests" "11"
  CLASSNAME=ixbuild.resty.functional.update.iscsi

  # Clean up any leftover items from any previous failed runs
  rest_request "PUT" "/services/services/iscsitarget/" '{ "srv_enable": "false" }'
  iscsictl -R -a
  umount -A

  # Enable the iSCSI service
  echo_test_title "Enable iSCSI service"
  rest_request "PUT" "/services/services/iscsitarget/" '{ "srv_enable": "true" }'
  check_rest_response "200 OK"

  echo_test_title "Verify the iSCSI service is enabled"
  rest_request "GET" "/services/services/iscsitarget/"
  check_rest_response "200 OK" || return 1
  ISCSISTATUS=$(cat ${RESTYOUT} | ${JSAWK} 'return this.srv_state')
  echo -n "ISCSISTATUS: $ISCSISTATUS"   
  echo $ISCSISTATUS | grep -q 'RUNNING'
  if [ $? -eq 0 ] ; then
    echo_ok
  else
    echo_fail
  fi

  # Now connect to iSCSI target
  echo_test_title "Connecting to iSCSI target"
  rc_test "iscsictl -A -p ${ip}:3620 -t iqn.2005-10.org.freenas.ctl:target0" || return 1
  sleep 10
 
  # Now check if we can mount target / create / rename / copy / delete / umount

  # Get the device for the connect target
  devname=`iscsictl | grep ${ip} | tr -d '\t' | awk '{print $4}'`

  echo_test_title "Creating iSCSI mountpoint"
  rc_test "mkdir /tmp/iscsi-mnt.$$" || return 1

  # echo_test_title "Mount the target volume"
  rc_test "mount /dev/${devname} /tmp/iscsi-mnt.$$" || return 1

  echo_test_title "Creating 45MB file to verify vzol size increase"
  rc_test "dd if=/dev/zero of=/tmp/45Mfile.img bs=1M count=45" || return 1

  echo_test_title "Moving 45MB file to verify vzol size increase"
  rc_test "mv /tmp/45Mfile.img /tmp/iscsi-mnt.$$/testfile1" || return 1

  echo_test_title "Deleting file"
  rc_test "rm /tmp/iscsi-mnt.$$/testfile1" || return 1

  echo_test_title "Unmounting iSCSI volume"
  rc_test "umount /tmp/iscsi-mnt.$$" || return 1

  echo_test_title "Removing iSCSI volume mountpoint"
  rc_test "rmdir /tmp/iscsi-mnt.$$" || return 1

  echo_test_title "Disconnect all targets"
  rc_test "iscsictl -R -a" || return 1

  # Disable the iSCSI service
  echo_test_title "Disable iSCSI service"
  rest_request "PUT" "/services/services/iscsitarget/" '{ "srv_enable": "false" }' 
  check_rest_response "200 OK"

  echo_test_title "Verify the iSCSI service is disabled"
  rest_request "GET" "/services/services/iscsitarget/"
  check_rest_response "200 OK" || return 1
  ISCSISTATUS=$(cat ${RESTYOUT} | ${JSAWK} 'return this.srv_state')
  echo -n "ISCSISTATUS: $ISCSISTATUS"
  echo $ISCSISTATUS | grep -q 'STOPPED'
  if [ $? -eq 0 ] ; then
    echo_ok
  else
    echo_fail
  fi

}

# Init function, this is called after module is sourced
# Pre-Set variables
# TESTSET = ( SMOKE / COMPLETE / BENCHMARK )
iscsi_init()
{
  # Run all the storage tests
  case $TESTSET in
        SMOKE) iscsi_tests ;;
     COMPLETE) iscsi_tests ;;
    BENCHMARK) ;;
            *) iscsi_tests ;;
  esac
}
