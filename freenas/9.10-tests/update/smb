#!/usr/bin/env bash
# Author: Joe Maloney
# License: BSD
# Location for tests into REST API of FreeNAS 9.10
# Resty Docs: https://github.com/micha/resty
# jsawk: https://github.com/micha/jsawk

# List the other modules which must be run before this module can execute
REQUIRES=""
export REQUIRES

smb_tests()
{

  SMB_SHARE="TestShare"
  SMB_PATH="/mnt/tank/cifs"

  TEST_CNT=9
  if [ -n "${OSX_HOST}" -a -n "${BRIDGEIP}" ]; then
    TEST_CNT=12

    # Clean up any leftover items from previous failed SMB runs
    osx_test 'umount -f "/Volumes/'"${BRIDGEHOST}"'"; rmdir "/Volumes/'"${BRIDGEHOST}"'"; exit 0' 
  fi

  # Set the group text and number of tests
  set_test_group_text "2 - Update - Samba tests" "${TEST_CNT}"
  CLASSNAME=ixbuild.resty.functional.update.smb

  # Clean up any leftover items from previous failed AD LDAP or SMB runs
  rest_request "PUT" "/directoryservice/activedirectory/1/" '{ "ad_bindpw": "'${ADPASSWORD}'", "ad_bindname": "'${ADUSERNAME}'", "ad_domainname": "'${BRIDGEDOMAIN}'", "ad_netbiosname_a": "'${BRIDGEHOST}'", "ad_idmap_backend": "rid", "ad_enable":"false" }'
  rest_request "PUT" "/directoryservice/ldap/1/" '{ "ldap_basedn": "'${LDAPBASEDN}'", "ldap_binddn": "'${LDAPBINDDN}'",  "ldap_bindpw": "'${LDAPBINDPASSWORD}'", "ldap_netbiosname_a": "'${BRIDGEHOST}'", "ldap_hostname": "'${LDAPHOSTNAME}'", "ldap_has_samba_schema": true, "ldap_enable": false }'
  rest_request "PUT" "/services/services/cifs/" '{ "srv_enable": false }'
  rest_request "DELETE" "/sharing/cifs/" '{ "cfs_comment": "My Test CIFS Share", "cifs_path": "'"${SMB_PATH}"'", "cifs_name": "'"${SMB_SHARE}"'", "cifs_guestok": true, "cifs_vfsobjects": "streams_xattr" }'

  echo_test_title "Updating CIFS service"
  rest_request "PUT" "/services/cifs/" '{ "cifs_srv_hostlookup": "false" }'
  check_rest_response "200"

  # Now start the service
  echo_test_title "Starting CIFS service"
  rest_request "PUT" "/services/services/cifs/" '{ "srv_enable": true }'
  check_rest_response "200 OK"

  echo_test_title "Checking to see if CIFS service is enabled"
  rest_request "GET" "/services/services/cifs/"
  check_service_status "RUNNING" || return 1

  echo_test_title "Changing permissions on ${SMB_PATH}"
  rest_request "PUT" "/storage/permission/" '{ "mp_path": "'"${SMB_PATH}"'", "mp_acl": "unix", "mp_mode": "777", "mp_user": "root", "mp_group": "wheel" }'
  check_rest_response "201 Created"

  echo_test_title "Creating a CIFS share on ${SMB_PATH}"
  rest_request "POST" "/sharing/cifs/" '{ "cfs_comment": "My Test CIFS Share", "cifs_path": "'"${SMB_PATH}"'", "cifs_name": "'"${SMB_SHARE}"'", "cifs_guestok": true, "cifs_vfsobjects": "streams_xattr" }'
  check_rest_response "201 Created"

  if [ -n "${OSX_HOST}" -a -n "${BRIDGEIP}" ]; then
    echo_test_title "Mounting CIFS as guest on OSX system and test write access"
    osx_test 'mkdir -p "/Volumes/'"${BRIDGEHOST}"'" && mount -t smbfs "smb://guest@'"${BRIDGEIP}"'/'"${SMB_SHARE}"'" "/Volumes/'"${BRIDGEHOST}"'" && touch "/Volumes/'"${BRIDGEHOST}"'/testfile.txt"'
    check_exit_status || return 1

    echo_test_title "Moving CIFS test file into a new directory"
    osx_test 'mkdir -p "/Volumes/'"${BRIDGEHOST}"'/tmp" && mv "/Volumes/'"${BRIDGEHOST}"'/testfile.txt" "/Volumes/'"${BRIDGEHOST}"'/tmp/testfile.txt"'
    check_exit_status || return 1

    echo_test_title "Deleting test file and directory from CIFS share"
    osx_test 'rm -f "/Volumes/'"${BRIDGEHOST}"'/tmp/testfile.txt" && rmdir "/Volumes/'"${BRIDGEHOST}"'/tmp" && find -- "/Volumes/'"${BRIDGEHOST}"'/" -prune -type d -empty | grep -q .'
    check_exit_status || return 1

    echo_test_title "Unmount CIFS share"
    osx_test 'umount "/Volumes/'"${BRIDGEHOST}"'"'
    check_exit_status || return 1
  fi  

  echo_test_title "Removing CIFS share on ${SMB_PATH}"
  rest_request "DELETE" "/sharing/cifs/" '{ "cfs_comment": "My Test CIFS Share", "cifs_path": "'"${SMB_PATH}"'", "cifs_name": "'"${SMB_SHARE}"'", "cifs_guestok": true, "cifs_vfsobjects": "streams_xattr" }'
  check_rest_response "204"

  # Now stop the service
  echo_test_title "Stopping CIFS service"
  rest_request "PUT" "/services/services/cifs/" '{ "srv_enable": false }'
  check_rest_response "200 OK"

  echo_test_title "Verify CIFS service is disabled"
  rest_request "GET" "/services/services/cifs/"
  check_service_status "STOPPED" || return 1

  return 0
}

# Init function, this is called after module is sourced
# Pre-Set variables
# TESTSET = ( SMOKE / COMPLETE / BENCHMARK )
smb_init()
{
  # Run all the smb tests
  case $TESTSET in
        SMOKE) smb_tests ;;
     COMPLETE) smb_tests ;;
    BENCHMARK) ;;
            *) smb_tests ;;
  esac
}
