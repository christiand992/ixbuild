#!/usr/bin/env bash
# Author: Joe Maloney
# License: BSD
# Location for tests into REST API of FreeNAS 9.10
# Resty Docs: https://github.com/micha/resty
# jsawk: https://github.com/micha/jsawk

# List the other modules which must be run before this module can execute
REQUIRES=""
export REQUIRES

smb_bsd_tests()
{
  SMB_NAME="TestShare"
  SMB_PATH="/mnt/tank/cifs"

  # Set the group text and number of tests
  set_test_group_text "2 - Update - Samba BSD tests" "20"
  CLASSNAME=ixbuild.resty.functional.update.smb_bsd

  # Clean up any leftover items from previous failed AD LDAP or SMB runs
  rest_request "PUT" "/directoryservice/activedirectory/1/" '{ "ad_bindpw": "'${ADPASSWORD}'", "ad_bindname": "'${ADUSERNAME}'", "ad_domainname": "'${BRIDGEDOMAIN}'", "ad_netbiosname_a": "'${BRIDGEHOST}'", "ad_idmap_backend": "rid", "ad_enable":"false" }'
  rest_request "PUT" "/directoryservice/ldap/1/" '{ "ldap_basedn": "'${LDAPBASEDN}'", "ldap_binddn": "'${LDAPBINDDN}'",  "ldap_bindpw": "'${LDAPBINDPASSWORD}'", "ldap_netbiosname_a": "'${BRIDGEHOST}'", "ldap_hostname": "'${LDAPHOSTNAME}'", "ldap_has_samba_schema": true, "ldap_enable": false }'
  rest_request "PUT" "/services/services/cifs/" '{ "srv_enable": false }'
  rest_request "DELETE" "/sharing/cifs/" '{ "cfs_comment": "My Test CIFS Share", "cifs_path": "'"${SMB_PATH}"'", "cifs_name": "'"${SMB_NAME}"'", "cifs_guestok": true, "cifs_vfsobjects": "streams_xattr" }'
  umount -A &>/dev/null
  rmdir /tmp/cifs-mnt.* &>/dev/null

  # Set auxilary parameters to allow mount_smbfs to work with Active Directory
  echo_test_title "Setting auxilary parameters for mount_smbfs.."
  rest_request "PUT" "/services/cifs/" '{ "cifs_srv_smb_options": "lanman auth = yes\nntlm auth = yes \nraw NTLMv2 auth = yes" }'
  check_rest_response "200 OK"

  echo_test_title "Updating CIFS service"
  rest_request "PUT" "/services/cifs/" '{ "cifs_srv_hostlookup": "false" }'
  check_rest_response "200"

  # Now start the service
  echo_test_title "Starting CIFS service"
  rest_request "PUT" "/services/services/cifs/" '{ "srv_enable": true }'
  check_rest_response "200 OK"

  # Wait a moment for samba to spin up
  sleep 4

  echo_test_title "Checking to see if CIFS service is enabled"
  rest_request "GET" "/services/services/cifs/"
  check_service_status "RUNNING" || return 1

  echo_test_title "Changing permissions on ${SMB_PATH}"
  rest_request "PUT" "/storage/permission/" '{ "mp_path": "'"${SMB_PATH}"'", "mp_acl": "unix", "mp_mode": "777", "mp_user": "root", "mp_group": "wheel" }'
  check_rest_response "201 Created"

  echo_test_title "Creating a CIFS share on ${SMB_PATH}"
  rest_request "POST" "/sharing/cifs/" '{ "cfs_comment": "My Test CIFS Share", "cifs_path": "'"${SMB_PATH}"'", "cifs_name": "'"${SMB_NAME}"'", "cifs_guestok": true, "cifs_vfsobjects": "streams_xattr" }'
  check_rest_response "201 Created"

  # Now check if we can mount NFS / create / rename / copy / delete / umount
  echo_test_title "Creating CIFS mountpoint"
  rc_test "mkdir /tmp/cifs-mnt.$$" || return 1
  sync

  echo_test_title "Mounting CIFS"
  rc_test "mount_smbfs -N -I ${ip} //guest@testnas/${SMB_NAME} /tmp/cifs-mnt.$$" || return 1

  # TODO - some kind of verification that smbfs has mounted?
  sleep 5

  echo_test_title "Creating CIFS file"
  rc_test "touch /tmp/cifs-mnt.$$/testfile" || return 1

  echo_test_title "Moving CIFS file"
  rc_test "mv /tmp/cifs-mnt.$$/testfile /tmp/cifs-mnt.$$/testfile2" || return 1

  echo_test_title "Copying CIFS file"
  rc_test "cp /tmp/cifs-mnt.$$/testfile2 /tmp/cifs-mnt.$$/testfile" || return 1

  echo_test_title "Deleting CIFS file 1/2"
  rc_test "rm /tmp/cifs-mnt.$$/testfile" || return 1

  echo_test_title "Deleting CIFS file 2/2"
  rc_test "rm /tmp/cifs-mnt.$$/testfile2" || return 1

  echo_test_title "Unmounting CIFS"
  rc_test "umount /tmp/cifs-mnt.$$" || return 1

  echo_test_title "Removing CIFS mountpoint"
  rc_test "rmdir /tmp/cifs-mnt.$$" || return 1

  echo_test_title "Removing CIFS share on ${SMB_PATH}"
  rest_request "DELETE" "/sharing/cifs/" '{ "cfs_comment": "My Test CIFS Share", "cifs_path": "'"${SMB_PATH}"'", "cifs_name": "'"${SMB_NAME}"'", "cifs_guestok": true, "cifs_vfsobjects": "streams_xattr" }'
  check_rest_response "204"

  # Now stop the service
  echo_test_title "Stopping CIFS service"
  rest_request "PUT" "/services/services/cifs/" '{ "srv_enable": false }'
  check_rest_response "200 OK"

  echo_test_title "Verify CIFS service is disabled"
  rest_request "GET" "/services/services/cifs/"
  check_service_status "STOPPED" || return 1

  return 0
}

# Init function, this is called after module is sourced
# Pre-Set variables
# TESTSET = ( SMOKE / COMPLETE / BENCHMARK )
smb_bsd_init()
{
  # Run all the smb_bsd tests
  case $TESTSET in
        SMOKE) smb_bsd_tests ;;
     COMPLETE) smb_bsd_tests ;;
    BENCHMARK) ;;
            *) smb_bsd_tests ;;
  esac
}
