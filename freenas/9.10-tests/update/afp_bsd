#!/usr/bin/env bash
# Author: Joe Maloney
# License: BSD
# Location for tests into REST API of FreeNAS 9.10
# Resty Docs: https://github.com/micha/resty
# jsawk: https://github.com/micha/jsawk

# List the other modules which must be run before this module can execute
REQUIRES=""
export REQUIRES

afp_bsd_tests()
{
  # Set the test count based on config settings
  TEST_CNT="4"
  if [ -n "${BRIDGEIP}" ]; then
    TEST_CNT="5"
  fi

  # Clean up any leftover items from previous failed AFP runs
  rest_request "PUT" "/services/afp/" '{ "afp_srv_guest": false }'
  rest_request "DELETE" "/storage/volume/1/datasets/afp_bsd/"

  # Set the group text and number of tests
  set_test_group_text "2 - Update - AFP BSD tests" "${TEST_CNT}"
  CLASSNAME=ixbuild.resty.functional.update.afp_bsd

  echo_test_title "Creating AFP dataset"
  rest_request "POST" "/storage/volume/tank/datasets/" '{ "name": "afp_bsd" }'
  check_rest_response "201 Created" || return 1

  echo_test_title "Enabling AFP service"
  if [ -n "${BRIDGEIP}" ]; then
    rest_request "PUT" "/services/afp/" '{ "afp_srv_guest": true, "afp_srv_bindip": "'"${BRIDGEIP}"'" }'
  else
    rest_request "PUT" "/services/afp/" '{ "afp_srv_guest": true }'
  fi
  check_rest_response "200 OK" || return 1

  echo_test_title "Updating AFP service"
  rest_request "PUT" "/services/afp/" '{ "afp_srv_connections_limit": "100"  }'
  check_rest_response "200" || return 1

  echo_test_title "Checking to see if AFP service is enabled"
  rest_request "GET" "/services/services/afp/"
  check_service_status "RUNNING" || return 1

  # Verify mountability and permissions of AFP share after config changes
  if [ -n "${BRIDGEIP}" ]; then
    echo_test_title "Poll VM to ensure AFP service is up and running"
    wait_for_avail_port "548"
    check_exit_status || return 1
  fi  

  # Test disable AFP
  echo_test_title "Verify AFP service can be disabled.."
  rest_request "PUT" "/services/afp/" '{ "afp_srv_guest": false }'
  check_rest_response "200 OK" || return 1

  # Test delete AFP dataset
  echo_test_title "Verify AFP dataset can be destroyed.."
  rest_request "DELETE" "/storage/volume/1/datasets/afp_bsd/"
  check_rest_response "204" || return 1

  return 0
}

# Init function, this is called after module is sourced
# Pre-Set variables
# TESTSET = ( SMOKE / COMPLETE / BENCHMARK )
afp_bsd_init()
{
  # Run all the smb tests
  case $TESTSET in
        SMOKE) afp_bsd_tests ; return $? ;;
     COMPLETE) afp_bsd_tests ; return $? ;;
    BENCHMARK) ;;
            *) afp_bsd_tests ; return $? ;;
  esac
}

