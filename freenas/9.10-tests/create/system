#!/usr/bin/env bash
# Author: Joe Maloney
# License: BSD
# Location for tests into REST API of FreeNAS 9.10
# Resty Docs: https://github.com/micha/resty
# jsawk: https://github.com/micha/jsawk

# List the other modules which must be run before this module can execute
REQUIRES="ssh"
export REQUIRES

system_tests()
{
  set_test_group_text "1 - Create - System tests" "9"
  CLASSNAME=ixbuild.resty.functional.create.system

  # Get system version
  echo_test_title "Checking system version.."
  rest_request "GET" "/system/version/"
  check_rest_response "200 OK"

  # Set the timezone
  echo_test_title "Setting timezone.."
  rest_request "PUT" "/system/settings/" '{ "stg_timezone": "America/New_York" }'
  check_rest_response "200 OK"

  # Check loader tunable
  echo_test_title "Checking system tunable 'dummynet'.."
  rest_request "GET" "/system/tunable/"
  if ! check_property_value -q ".[].tun_var" "dummynet_load"; then
    echo -n " not loaded. " && echo_ok

    # Create loader tunable
    echo_test_title "Creating system tunable 'dummynet'.."
    rest_request "POST" "/system/tunable/" '{ "tun_var": "dummynet_load", "tun_enabled": true, "tun_value": "YES", "tun_type": "loader" }'
    check_rest_response "201 Created"

    # Reboot system to enable tunable
    echo_test_title "Reboot system to enable tunable.."
    rest_request "POST" "/system/reboot/"
    check_rest_response "202" || return 1

    # Ensure shutdown is complete before polling for initialization
    echo_test_title "Waiting for VM to shut down"
    loop_cnt=0
    while :
    do
      ping -c 1 -W 1 ${FNASTESTIP} >/dev/null 2>/dev/null
      if [ $? -ne 0 ]; then
        # Ping response from VM has ceased responding
        echo_ok && break;
      fi
      (( loop_cnt++ ))
      if [ $loop_cnt -gt 60 ]; then
        echo_fail
        return 1
      fi
      sleep 4 && echo -n ".";
    done
  else
    echo -n " already loaded." && echo_skipped
  fi

  echo_test_title "Waiting for HTTP server and API initialization after reboot"
  wait_for_avail_port "80" && wait_for_avail && echo_ok || (echo_fail && return 1)

  echo_test_title "Verifying SSH server initialization after reboot"
  wait_for_avail_port "22" && echo_ok || (echo_fail && return 1)

  # Verify loader tunable
  echo_test_title "Verify system tunable 'dummynet_load'.."
  ssh_test "kldstat -m dummynet"
  check_exit_status || return 1

  return 0
}

# Init function, this is called after module is sourced
# Pre-Set variables
# TESTSET = ( SMOKE / COMPLETE / BENCHMARK )
system_init()
{
  # Run all the tests
  case $TESTSET in
        SMOKE) system_tests ; return $? ;;
     COMPLETE) system_tests ; return $? ;;
    BENCHMARK) ;;
            *) system_tests ; return $? ;;
  esac
}
