#!/usr/bin/env bash
# Author: Kris Moore
# License: BSD
# Location for tests into REST API of FreeNAS 9.10
# Resty Docs: https://github.com/micha/resty
# jsawk: https://github.com/micha/jsawk

# List the other modules which must be run before this module can execute
REQUIRES="storage"
export REQUIRES

nfs_tests()
{
  MNT_PATH="/mnt/tank/share"

  # Set the group text and number of tests
  set_test_group_text "1 - Create - NFS tests" "14"
  CLASSNAME=ixbuild.resty.functional.create.nfs

  # Enable NFS server
  echo_test_title "Creating the NFS server"
  rest_request "PUT" "/services/nfs/" '{ "nfs_srv_bindip": "'"${ip}"'", "nfs_srv_mountd_port": 618, "nfs_srv_allow_nonroot": false, "nfs_srv_servers": 10, "nfs_srv_udp": false, "nfs_srv_rpcstatd_port": 871, "nfs_srv_rpclockd_port": 32803, "nfs_srv_v4": false, "nfs_srv_v4_krb": false, "id": 1 }'
  check_rest_response "200 OK"

  # Check creating a NFS share
  echo_test_title "Creating a NFS share on ${MNT_PATH}"
  rest_request "POST" "/sharing/nfs/" '{ "nfs_comment": "My Test Share", "nfs_paths": ["'"${MNT_PATH}"'"], "nfs_security": "sys" }'
  check_rest_response "201 Created"

  # Now start the service
  echo_test_title "Starting NFS service"
  rest_request "PUT" "/services/services/nfs/" '{ "srv_enable": true }'
  check_rest_response "200 OK"
  
  # Give NFS time to start
  echo_test_title "Verify that nfsd shows up in netstat results"
  ssh_test "netstat -lap tcp | grep nfsd | awk '\$6 == \"LISTEN\" || \$6 == \"ESTABLISHED\" '" 
  check_exit_status || return 1

  echo_test_title "Verify NFS server on host"
  wait_for_fnas_mnt "${MNT_PATH}" "Everyone"
  check_exit_status || return 1

  echo_test_title "Checking to see if NFS service is enabled"
  rest_request "GET" "/services/services/nfs/"
  check_service_status "RUNNING" || return 1

  # Now check if we can mount NFS / create / rename / copy / delete / umount
  echo_test_title "Creating NFS mountpoint"
  rc_test "mkdir /tmp/nfs-mnt.$$" || return 1

  echo_test_title "Mounting NFS"
  rc_test "mount_nfs ${ip}:${MNT_PATH} /tmp/nfs-mnt.$$" "umount /tmp/nfs-mnt.$$ ; rmdir /tmp/nfs-mnt.$$" "60" || return 1

  echo_test_title "Creating NFS file"
  rc_test "touch /tmp/nfs-mnt.$$/testfile" "umount /tmp/nfs-mnt.$$ ; rmdir /tmp/nfs-mnt.$$" || return 1

  echo_test_title "Moving NFS file"
  rc_test "mv /tmp/nfs-mnt.$$/testfile /tmp/nfs-mnt.$$/testfile2" || return 1

  echo_test_title "Copying NFS file"
  rc_test "cp /tmp/nfs-mnt.$$/testfile2 /tmp/nfs-mnt.$$/testfile" || return 1

  echo_test_title "Deleting NFS file"
  rc_test "rm /tmp/nfs-mnt.$$/testfile2" || return 1

  echo_test_title "Unmounting NFS"
  rc_test "umount /tmp/nfs-mnt.$$" || return 1

  echo_test_title "Removing NFS mountpoint"
  rc_test "rmdir /tmp/nfs-mnt.$$" || return 1
}

# Init function, this is called after module is sourced
# Pre-Set variables
# TESTSET = ( SMOKE / COMPLETE / BENCHMARK )
nfs_init()
{
  # Run all the nfs tests
  case $TESTSET in
        SMOKE) nfs_tests ;;
     COMPLETE) nfs_tests ;;
    BENCHMARK) ;;
            *) nfs_tests ;;
  esac
}

