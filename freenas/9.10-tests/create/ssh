#!/usr/bin/env bash
# Author: Kris Moore
# License: BSD
# Location for tests into REST API of FreeNAS 9.10
# Resty Docs: https://github.com/micha/resty
# jsawk: https://github.com/micha/jsawk

# List the other modules which must be run before this module can execute
REQUIRES="network"
export REQUIRES

# Run a series of tests on the ssh settings
# We also leave it enabled, so we have access to VM if something hangs / goes wrong
ssh_tests()
{
  set_test_group_text "1 - Create - SSH Tests" "3"
  CLASSNAME=ixbuild.resty.functional.create.ssh

  echo_test_title "Configuring SSH settings"
  rest_request "PUT" "/services/ssh/" '{ "ssh_rootlogin": true }'
  check_rest_response "200 OK"

  echo_test_title "Enabling SSH Service"
  rest_request "PUT" "/services/services/ssh/" '{ "srv_enable": true }'
  check_rest_response "200 OK"

  echo_test_title "Checking to see if SSH service is enabled"
  rest_request "GET" "/services/services/ssh/"
  check_service_status "RUNNING"

  # Use Jenkins SSH Keys, or generate new ones to be added to the test target.
  local ssh_pubkey=""
  if [ -f "/root/.ssh/id_dsa.jenkins.pub" ]; then
    ssh_pubkey="$(cat "/root/.ssh/id_dsa.jenkins.pub")"
    ssh-add -l &>/dev/null
    if [ "$?" = "1" ]; then
      ssh-add "/root/.ssh/id_dsa.jenkins" &>/dev/null
    fi
  else
    if [ ! -f "$HOME/.ssh/id_rsa.tests.pub" ]; then
      ssh-keygen -b 4096 -t rsa -f "$HOME/.ssh/id_rsa.tests" -q -N ""
      ssh-add "$HOME/.ssh/id_rsa.tests" &>/dev/null
    fi
    ssh_pubkey="$(cat "$HOME/.ssh/id_rsa.tests.pub")"
  fi

  # Get the root user id so we can add ssh keys to the test target
  rest_request "GET" "/account/users/"
  local root_user_id=$(cat $RESTYOUT | ${JSAWK} -n 'if (this.bsdusr_username == "root") { out(this.id) }')

  echo_test_title "Adding SSH public key from the executor to the root user account"
  if [ -n "$root_user_id" -a -n "$ssh_pubkey" ]; then
    rest_request "PUT" "/account/users/${root_user_id}/" '{ "bsdusr_sshpubkey": "'"${ssh_pubkey}"'" }'
    check_rest_response "201"
  else
    echo_fail
    return 1
  fi

  return 0
}

# Init function, this is called after module is sourced
# Pre-Set variables
# TESTSET = ( SMOKE / COMPLETE / BENCHMARK )
ssh_init()
{
  # Run all the storage tests
  case $TESTSET in
        SMOKE) ssh_tests ;;
     COMPLETE) ssh_tests ;;
    BENCHMARK) ;;
            *) ssh_tests ;;
  esac
}
