#!/usr/local/bin/bash
# Author: Joe Maloney
# License: BSD
# Location for tests into REST API of FreeNAS 9.10
# Resty Docs: https://github.com/micha/resty
# jsawk: https://github.com/micha/jsawk

# List the other modules which must be run before this module can execute
REQUIRES=""
export REQUIRES

network_tests()
{
  # Set the group text and number of tests
  set_test_group_text "0 - Prerequisite - Networking Configuration" "5"

  if [ -z "$FNASTESTIP" ] ; then
     echo "Missing the FNASTESTIP settings, test skipped.."
     echo_skipped
     add_xml_result "skipped" "Skipped due to missing FNASTESTIP settings"
     return 0
  fi
  
  ip="$FNASTESTIP"

  echo_test_title "Setting IP address: ${ip} on em0"
  rest_request "POST" "/network/interface/" '{ "int_ipv4address": "'"${ip}"'", "int_name": "internal", "int_v4netmaskbit": "24", "int_interface": "em0" }'
  check_rest_response "201 CREATED"

  # Wait 30 seconds before trying more REST queries again
  sleep 30

  if [ -n "$BRIDGEIP" ] ; then
    # Using the bridged adapter settings
    echo_test_title "Setting bridged IP on em1"
    rest_request "POST" "/network/interface/" '{ "int_ipv4address": "'"${BRIDGEIP}"'", "int_name": "ext", "int_v4netmaskbit": "'"${BRIDGENETMASK}"'", "int_interface": "em1" }'
    check_rest_response "201 CREATED"

    # Set the global config stuff
    echo_test_title "Setting default route and DNS"
    rest_request "PUT" "/network/globalconfiguration/" '{ "gc_domain": "'"${BRIDGEDOMAIN}"'", "gc_ipv4gateway": "'"${BRIDGEGW}"'", "gc_hostname": "'"${BRIDGEHOST}"'", "gc_nameserver1": "'"${BRIDGEDNS}"'" }'
    check_rest_response "200 OK"
  else
    # Using the NAT mode
    echo_test_title "Setting DHCP on em1"
    rest_request "POST" "/network/interface/" '{ "int_dhcp": true, "int_name": "ext", "int_interface": "em1" }'
    check_rest_response "201 CREATED"
  fi

  echo_test_title "Rebooting VM"
  rest_request "POST" "/system/reboot/" "''"
  # Disabled the response check, seems the reboot happens fast enough to
  # prevent a valid response sometimes
  #check_rest_response "202 ACCEPTED"
  echo_ok

  echo_test_title "Waiting for reboot"
  sleep 20
  wait_for_avail
  echo_ok
}

# Init function, this is called after module is sourced
# Pre-Set variables
# TESTSET = ( SMOKE / COMPLETE / BENCHMARK )
network_init()
{
  # Run all the tests
  case $TESTSET in
        SMOKE) network_tests ; return $? ;;
     COMPLETE) network_tests ; return $? ;;
    BENCHMARK) ;;
            *) network_tests ; return $? ;;
  esac
}

